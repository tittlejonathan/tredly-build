#!/usr/bin/env bash
##########################################################################
# Copyright 2016 Vuid Pty Ltd 
# https://www.vuid.com
#
# This file is part of tredly-build.
#
# tredly-build is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tredly-build is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tredly-build.  If not, see <http://www.gnu.org/licenses/>.
##########################################################################

# commands require running as root
cmn_assert_running_as_root

# Sanity checks - make sure packages we need are installed
check_for_zfs
check_for_ipfw

show_help "Available Commands:

    container
    ---------
    Description:
        Destroys a single container specified by UUID.

    Examples:
        $(basename "$0") destroy container aF4kj5x0

    containers partition
    ---------
    Description:
        Destroy all containers on a given partition, but leave the partition
        intact.
        
    Examples:
        $(basename "$0") destroy containers customer1
        
    partition
    ---------
    Description:
        Destroy a partition and all data held within. This includes all 
        containers.
        
    Examples:
        $(basename "$0") destroy partition customer1
        
    partitions
    ---------
    Description:
        Destroys all partitions on this host, and all data held within.
        
    Examples:
        $(basename "$0") destroy partitions
"

case "${_SUBCOMMANDS[0]}" in
    container)
        # validation
        if [[ ${#_SUBCOMMANDS[@]} -gt 2 ]]; then
            exit_with_error "Too many arguments received."
        fi
        
        # look up the partition from the uuid
        destroy_container "${_SUBCOMMANDS[1]}" "$( get_container_partition "${_SUBCOMMANDS[1]}" )"
    ;;
    containers)
        # validation
        if [[ ${#_SUBCOMMANDS[@]} -gt 2 ]]; then
            exit_with_error "Too many arguments received."
        fi
        
        partition_destroy_containers "${_SUBCOMMANDS[1]}"
    ;;
    partition)
        # validation
        if [[ ${#_SUBCOMMANDS[@]} -gt 2 ]]; then
            exit_with_error "Too many arguments received."
        fi
        
        partition_destroy "${_SUBCOMMANDS[1]}" "true"

    ;;
    partitions)
        # validation
        if [[ ${#_SUBCOMMANDS[@]} -gt 1 ]]; then
            exit_with_error "Too many arguments received."
        fi
        
        partition_destroy_all
    ;;
    *)
        exit_with_error "Unknown destroy command '${_SUBCOMMANDS[0]}'"
    ;;
esac
