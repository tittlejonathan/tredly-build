#!/usr/bin/env bash
##########################################################################
# Copyright 2016 Vuid Pty Ltd 
# https://www.vuid.com
#
# This file is part of tredly-build.
#
# tredly-build is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# tredly-build is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with tredly-build.  If not, see <http://www.gnu.org/licenses/>.
##########################################################################

# commands require running as root
cmn_assert_running_as_root

# Sanity checks - make sure packages we need are installed
check_for_zfs
check_for_ipfw


show_help "Available Commands:
    container
    ---------
    Description:
        Validates a Tredlyfile.
    
    Options:
        --path=         Provide an alternate path to a Tredlyfile
        
    Examples:
        $(basename "$0") validate container
        $(basename "$0") validate container --path=/path/to/container
"

case "${_SUBCOMMANDS[0]}" in
    container)
        # validation
        if [[ ${#_SUBCOMMANDS[@]} -gt 1 ]]; then
            exit_with_error "Too many arguments received."
        fi
        
        # use path if we were given it, otherwise use cwd
        if [[ -n "${_FLAGS[path]}" ]]; then
            _CONTAINER_CWD="$(rtrim ${_FLAGS[path]} /)/"
        else
            # use pwd to get the absolute path to the current directory
            _CONTAINER_CWD="`pwd`/"
        fi
        
        # set the Tredlyfile
        tredlyFile="$(rtrim ${_CONTAINER_CWD} '/' )/Tredlyfile"
        
        if [[ ! -e "${tredlyFile}" ]]; then
            exit_with_error "No Tredlyfile found at ${tredlyFile}"
        fi

        e_header "Validating ${tredlyFile}"

        # Parse the tredlyFile, and exit with an error if it doesnt exist
        if ! tredlyfile_parse "${tredlyFile}"; then
            exit_with_error "Tredlyfile is invalid."
        else
            e_success "TredlyFilefile validated successfully."
        fi
    ;;
    *)
        exit_with_error "Unknown validate command '${_SUBCOMMANDS[0]}'"
    ;;
esac
